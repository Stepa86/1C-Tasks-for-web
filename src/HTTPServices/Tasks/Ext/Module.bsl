
Функция ПолучитьЗадачуGET(Запрос)
	
	номерЗадачи = Запрос.ПараметрыURL["string"];
	
	Если номерЗадачи = "Ping" Тогда
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
		Ответ.УстановитьТелоИзСтроки( НСтр( "ru='Поздравляем!!! Подключение выполнено успешно!'" ) );
		Возврат Ответ;
	КонецЕсли;
	
	Попытка
		
		найденнаяЗадача = Справочники._Задачи.НайтиПоКоду( Число( номерЗадачи ) );
		
		Если ЗначениеЗаполнено( найденнаяЗадача ) Тогда
			
			Ответ = Ответ_Задача( найденнаяЗадача );
			
		Иначе
			
			Ответ = Ответ_ЗадачаНеНайдена();
			
		КонецЕсли;
		
	Исключение
		
		Ответ = Ответ_ОшибкаВыполнения();
		
	КонецПопытки;
	
	Возврат Ответ;
	
КонецФункции

Функция Ответ_ЗадачаНеНайдена()
	
	Ответ = Новый HTTPСервисОтвет(404);
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки( НСтр( "ru='Задача с таким номером не найдена!'" ) );

	Возврат Ответ;
	
КонецФункции

Функция Ответ_ОшибкаВыполнения()
	
	Ответ = Новый HTTPСервисОтвет(500);
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки( НСтр( "ru='При формировании ответа произошла внутренняя ошибка сервера!'" ) );
	
	Возврат Ответ;
	
КонецФункции

Функция Ответ_НеверныйЗапрос( Знач пИнформацияОбОшибке)

	Ответ = Новый HTTPСервисОтвет(400);
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки( КраткоеПредставлениеОшибки( пИнформацияОбОшибке ) );
	
	Возврат Ответ;

КонецФункции // Ответ_НеверныйЗапрос()

Функция Ответ_Задача( Знач пЗадача )
	
	Попытка
		
		таблДок = Новый ТабличныйДокумент;
		Справочники._Задачи.Печать( таблДок, пЗадача );
		
	Исключение
		
		Возврат Ответ_НеверныйЗапрос( ИнформацияОбОшибке() );
		
	КонецПопытки;
	
	текстHTML = ПолучитьТекстHTMLПоТабличномуДокументу(таблДок);
	
	СсылкаНаЗадачу = "<a href=" + Константы._АдресПубликацииИнформационнойБазы.Получить() + "#" + ПолучитьНавигационнуюСсылку(пЗадача) + ">Перейти в 1С</a>";
	
	текстHTML = стрЗаменить( текстHTML, "</body></html>", СсылкаНаЗадачу + "</body></html>" );
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки( текстHTML );
	
	Возврат Ответ;
	
КонецФункции

Функция ПолучитьТекстHTMLПоТабличномуДокументу(Знач таблДок)
	
	имяФайла = ПолучитьИмяВременногоФайла( "html" );
	
	таблДок.Записать( имяФайла, ТипФайлаТабличногоДокумента.HTML5 );
	
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.ОткрытьФайл( имяФайла );
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	ДокументHTML.Заголовок = таблДок.ИспользуемоеИмяФайла;
	
	текстHTML = ПолучитьТекстHTMLИзОбъектаДокументHTML( ДокументHTML );
	
	ЧтениеHTML.Закрыть();
	
	УдалитьФайлы( имяФайла );
	
	Возврат текстHTML;

КонецФункции

// Получает текст HTML из объекта ДокументHTML.
//
// Параметры:
//  ДокументHTML  - ДокументHTML - документ, из которого будет извлекаться текст.
//
// Возвращаемое значение:
//   Строка   - текст HTML
//
Функция ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML)
	
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьHTML = Новый ЗаписьHTML;
	ЗаписьHTML.УстановитьСтроку();
	ЗаписьDOM.Записать(ДокументHTML,ЗаписьHTML);
	Возврат ЗаписьHTML.Закрыть();
	
КонецФункции





